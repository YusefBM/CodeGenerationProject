package CodeGenerationLanguaage.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import org.jetbrains.mps.openapi.model.SNode;
import CodeGenerationLanguaage.behavior.DomainObjectComponent__BehaviorDescriptor;
import CodeGenerationLanguaage.behavior.Attribute__BehaviorDescriptor;
import jetbrains.mps.internal.collections.runtime.Sequence;
import CodeGenerationLanguaage.behavior.DomainObject__BehaviorDescriptor;
import CodeGenerationLanguaage.behavior.Relationship__BehaviorDescriptor;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class DomainObject_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);

    tgs.append("package ");
    tgs.append(SPropertyOperations.getString(SNodeOperations.getNodeAncestor(ctx.getPrimaryInput(), CONCEPTS.Module$FI, false, false), PROPS.name$MnvL));
    tgs.append(".model;");
    tgs.newLine();
    tgs.newLine();

    if ((ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (boolean) DomainObjectComponent__BehaviorDescriptor.isList_id_n2UF9kIx.invoke(it);
      }
    }) != null)) {
      tgs.append("import java.util.List;");
      tgs.newLine();
      tgs.append("import java.util.LinkedList;");
      tgs.newLine();
    }
    if ((ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.Attribute$eC) && (boolean) Attribute__BehaviorDescriptor.isSet_id_n2UF9BsS.invoke(SNodeOperations.as(it, CONCEPTS.Attribute$eC));
      }
    }) != null)) {
      tgs.append("import java.util.Set;");
      tgs.newLine();
      tgs.append("import java.util.HashSet;");
      tgs.newLine();
    }
    tgs.newLine();
    tgs.indent();
    tgs.append("public class");
    tgs.append(" ");
    tgs.indent();
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append(" {");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    // Generating class attributes
    for (SNode elem : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt))) {
      tgs.indent();
      tgs.append("private");
      tgs.append(" ");
      tgs.appendNode(elem);
      tgs.append(";");
      tgs.newLine();
    }

    tgs.newLine();
    tgs.indent();
    // Generating constructor that receives all fields as parameters
    tgs.append("public");
    tgs.append(" ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append("(");
    {
      Iterable<SNode> collection = SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt);
      final SNode lastItem = Sequence.fromIterable(collection).last();
      for (SNode item : collection) {
        tgs.appendNode(item);
        if (item != lastItem) {
          tgs.append(", ");
        }
      }
    }
    tgs.append(")");
    tgs.append(" ");
    tgs.append("{");
    tgs.newLine();
    tgs.increaseIndent();
    for (SNode elem : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt))) {
      tgs.indent();
      tgs.append("this.");
      tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL));
      tgs.append(" ");
      tgs.append("=");
      tgs.append(" ");
      tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL));
      tgs.append(";");
      tgs.newLine();
    }
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("}");
    tgs.newLine();

    // Generating constructor that receives only primitive fields as parameters
    if ((boolean) DomainObject__BehaviorDescriptor.containsCollection_id_n2UEXg41.invoke(ctx.getPrimaryInput())) {
      tgs.newLine();
      tgs.indent();
      tgs.append("public");
      tgs.append(" ");
      tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
      tgs.append("(");
      {
        Iterable<SNode> collection = DomainObject__BehaviorDescriptor.getAttributesPrimitives_id_n2UErbJA.invoke(ctx.getPrimaryInput());
        final SNode lastItem = Sequence.fromIterable(collection).last();
        for (SNode item : collection) {
          tgs.appendNode(item);
          if (item != lastItem) {
            tgs.append(", ");
          }
        }
      }
      tgs.append(")");
      tgs.append(" ");
      tgs.append("{");
      tgs.newLine();
      tgs.increaseIndent();
      for (SNode elem : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt))) {
        tgs.indent();
        tgs.append("this.");
        tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL));
        tgs.append(" ");
        tgs.append("=");
        tgs.append(" ");
        if (SNodeOperations.isInstanceOf(elem, CONCEPTS.Attribute$eC) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.as(elem, CONCEPTS.Attribute$eC), LINKS.type$3xxQ), CONCEPTS.List$KA)) {
          tgs.append("new LinkedList<>();");
          tgs.newLine();
        } else if (SNodeOperations.isInstanceOf(elem, CONCEPTS.Attribute$eC) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.as(elem, CONCEPTS.Attribute$eC), LINKS.type$3xxQ), CONCEPTS.Set$Zc)) {
          tgs.append("new HashSet<>();");
          tgs.newLine();
        } else {
          tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL));
          tgs.append(";");
          tgs.newLine();
        }
      }
      tgs.decreaseIndent();
      tgs.indent();
      tgs.append("}");
      tgs.newLine();
    }

    // Generating getters and setters
    for (SNode elem : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt))) {

      tgs.newLine();
      tgs.indent();

      if (SNodeOperations.isInstanceOf(elem, CONCEPTS.Attribute$eC)) {
        tgs.append("public");
        tgs.append(" ");
        tgs.appendNode(SLinkOperations.getTarget(SNodeOperations.as(elem, CONCEPTS.Attribute$eC), LINKS.type$3xxQ));
        tgs.append(" ");
        tgs.append("get");
        tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL).substring(0, 1).toUpperCase() + SPropertyOperations.getString(elem, PROPS.name$MnvL).substring(1));
        tgs.append("()");
        tgs.append(" ");
        tgs.append("{");
        tgs.newLine();
      } else {
        tgs.append("public");
        tgs.append(" ");
        tgs.append(Relationship__BehaviorDescriptor.getType_id_n2UFf4Cb.invoke(SNodeOperations.as(elem, CONCEPTS.Relationship$TZ)));
        tgs.append(" ");
        tgs.append("get");
        tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL).substring(0, 1).toUpperCase() + SPropertyOperations.getString(elem, PROPS.name$MnvL).substring(1));
        tgs.append("()");
        tgs.append(" ");
        tgs.append("{");
        tgs.newLine();
      }
      tgs.increaseIndent();
      tgs.indent();
      tgs.append("return");
      tgs.append(" ");
      tgs.append("this.");
      tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL));
      tgs.append(";");
      tgs.newLine();
      tgs.decreaseIndent();
      tgs.indent();
      tgs.append("}");
      tgs.newLine();

      tgs.newLine();

      tgs.indent();
      tgs.append("public");
      tgs.append(" ");
      tgs.append("void");
      tgs.append(" ");
      tgs.append("set");
      tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL).substring(0, 1).toUpperCase() + SPropertyOperations.getString(elem, PROPS.name$MnvL).substring(1));
      tgs.append("(");
      tgs.appendNode(elem);
      tgs.append(")");
      tgs.append(" ");
      tgs.append("{");
      tgs.newLine();
      tgs.increaseIndent();
      tgs.indent();
      tgs.append("this.");
      tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL));
      tgs.append(" ");
      tgs.append("=");
      tgs.append(" ");
      tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL));
      tgs.append(";");
      tgs.newLine();
      tgs.decreaseIndent();
      tgs.indent();
      tgs.append("}");
      tgs.newLine();
    }

    tgs.newLine();

    // Generating toString() method
    tgs.indent();
    tgs.append("@Override");
    tgs.newLine();
    tgs.indent();
    tgs.append("public");
    tgs.append(" ");
    tgs.append("String");
    tgs.append(" ");
    tgs.append("toString()");
    tgs.append(" ");
    tgs.append("{");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("return");
    tgs.append(" ");
    tgs.append("\"");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append(" ");
    tgs.append("{ \"");
    for (int i = 0; i < SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt).size(); i++) {
      tgs.append(" ");
      tgs.append("+");
      tgs.append(" ");
      if (i == 0) {
        tgs.append("\"");
      } else {
        tgs.append("\",");
      }
      tgs.append(DomainObjectComponent__BehaviorDescriptor.getName_id_n2UESork.invoke(ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt)).getElement(i)));
      tgs.append("=\"");
      tgs.append(" ");
      tgs.append("+");
      tgs.append(" ");
      tgs.append(DomainObjectComponent__BehaviorDescriptor.getName_id_n2UESork.invoke(ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt)).getElement(i)));
    }
    tgs.append(" ");
    tgs.append("+");
    tgs.append(" ");
    tgs.append("\"}\";");
    tgs.newLine();
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("}");
    tgs.newLine();

    tgs.newLine();

    // Generating equals() method
    tgs.indent();
    tgs.append("@Override");
    tgs.newLine();
    tgs.indent();
    tgs.append("public boolean equals(Object obj) {");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    tgs.append("if (this == obj)");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("return true;");
    tgs.newLine();
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("if (obj == null)");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("return false;");
    tgs.newLine();
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("if (getClass() != obj.getClass())");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("return false;");
    tgs.newLine();
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append(" ");
    tgs.append("other = (");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append(") obj;");
    tgs.newLine();
    int i = 0;
    for (SNode elem : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt))) {
      if (SNodeOperations.isInstanceOf(ctx.getPrimaryInput(), CONCEPTS.Entity$EJ) && SNodeOperations.isInstanceOf(elem, CONCEPTS.Attribute$eC) && !((boolean) Attribute__BehaviorDescriptor.isBusinessKey_id_n2UEK1dU.invoke(SNodeOperations.as(elem, CONCEPTS.Attribute$eC)))) {
        return;
      }
      if (i > 0) {
        tgs.decreaseIndent();
      }
      tgs.newLine();
      tgs.indent();
      tgs.append("if (");
      tgs.append(DomainObjectComponent__BehaviorDescriptor.getName_id_n2UESork.invoke(elem));
      tgs.append(" == null) {");
      tgs.newLine();
      tgs.increaseIndent();
      tgs.indent();
      tgs.append("if (other.");
      tgs.append(DomainObjectComponent__BehaviorDescriptor.getName_id_n2UESork.invoke(elem));
      tgs.append(" != null)");
      tgs.newLine();
      tgs.increaseIndent();
      tgs.indent();
      tgs.append("return false;");
      tgs.newLine();
      tgs.decreaseIndent();
      tgs.decreaseIndent();
      tgs.indent();
      tgs.append("} else if (!");
      tgs.append(DomainObjectComponent__BehaviorDescriptor.getName_id_n2UESork.invoke(elem));
      tgs.append(".equals(other.");
      tgs.append(DomainObjectComponent__BehaviorDescriptor.getName_id_n2UESork.invoke(elem));
      tgs.append("))");
      tgs.newLine();
      tgs.increaseIndent();
      tgs.indent();
      tgs.append("return false;");
      tgs.newLine();
      i++;
    }
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("return true;");
    tgs.newLine();

    ctx.getBuffer().area().decreaseIndent();
    tgs.indent();
    tgs.append("}");
    tgs.newLine();

    tgs.newLine();
    // Generating hashCode() method
    tgs.indent();
    tgs.append("@Override");
    tgs.newLine();
    tgs.indent();
    tgs.append("public int hashCode() {");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("final int prime = 31;");
    tgs.newLine();
    tgs.indent();
    tgs.append("int result = 1;");
    tgs.newLine();
    for (SNode elem : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.components$3sCt))) {
      if (SNodeOperations.isInstanceOf(ctx.getPrimaryInput(), CONCEPTS.Entity$EJ) && SNodeOperations.isInstanceOf(elem, CONCEPTS.Attribute$eC) && !((boolean) Attribute__BehaviorDescriptor.isBusinessKey_id_n2UEK1dU.invoke(SNodeOperations.as(elem, CONCEPTS.Attribute$eC)))) {
        return;
      }
      tgs.indent();
      tgs.append("result = prime * result + ((");
      tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL));
      tgs.append(" == null) ? 0 : ");
      tgs.append(SPropertyOperations.getString(elem, PROPS.name$MnvL));
      tgs.append(".hashCode());");
      tgs.newLine();
    }
    tgs.indent();
    tgs.append("return result;");
    tgs.newLine();
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("}");
    tgs.newLine();
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("}");
    tgs.newLine();
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Module$FI = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eab8a8900L, "CodeGenerationLanguaage.structure.Module");
    /*package*/ static final SConcept Attribute$eC = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4b8L, "CodeGenerationLanguaage.structure.Attribute");
    /*package*/ static final SConcept List$KA = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa2afa83L, "CodeGenerationLanguaage.structure.List");
    /*package*/ static final SConcept Set$Zc = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa5f9e38L, "CodeGenerationLanguaage.structure.Set");
    /*package*/ static final SConcept Relationship$TZ = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaad11a37L, "CodeGenerationLanguaage.structure.Relationship");
    /*package*/ static final SConcept Entity$EJ = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa117514L, "CodeGenerationLanguaage.structure.Entity");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink components$3sCt = MetaAdapterFactory.getContainmentLink(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4a8L, 0x255c2eaa12d4bdL, "components");
    /*package*/ static final SContainmentLink type$3xxQ = MetaAdapterFactory.getContainmentLink(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4b8L, 0x255c2eaa12d4bbL, "type");
  }
}
