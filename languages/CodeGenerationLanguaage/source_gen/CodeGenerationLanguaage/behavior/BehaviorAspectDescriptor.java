package CodeGenerationLanguaage.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myDomainObject__BehaviorDescriptor = new DomainObject__BehaviorDescriptor();
  private final BHDescriptor myAttribute__BehaviorDescriptor = new Attribute__BehaviorDescriptor();
  private final BHDescriptor myRelationship__BehaviorDescriptor = new Relationship__BehaviorDescriptor();
  private final BHDescriptor myDomainObjectComponent__BehaviorDescriptor = new DomainObjectComponent__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myAttribute__BehaviorDescriptor;
      case 1:
        return myDomainObject__BehaviorDescriptor;
      case 2:
        return myDomainObjectComponent__BehaviorDescriptor;
      case 3:
        return myRelationship__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4b8L), MetaIdFactory.conceptId(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4a8L), MetaIdFactory.conceptId(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaad371a8L), MetaIdFactory.conceptId(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaad11a37L)).seal();
}
