package CodeGenerationLanguaage.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;

public final class Attribute__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4b8L, "CodeGenerationLanguaage.structure.Attribute");

  public static final SMethod<Boolean> isBusinessKey_id_n2UEK1dU = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isBusinessKey").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("_n2UEK1dU").build();
  public static final SMethod<Boolean> isPrimaryKey_id_n2UGc7fk = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isPrimaryKey").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("_n2UGc7fk").build();
  public static final SMethod<Boolean> isCollection_id_n2UEXrwB = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isCollection").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).id("_n2UEXrwB").build();
  public static final SMethod<Boolean> isPrimitive_id_n2UGPrSw = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isPrimitive").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("_n2UGPrSw").build();
  public static final SMethod<Boolean> isList_id_n2UF9kIx = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isList").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).id("_n2UF9kIx").build();
  public static final SMethod<Boolean> isSet_id_n2UF9BsS = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isSet").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("_n2UF9BsS").build();
  public static final SMethod<SNode> getType_id_n2UGtFXv = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getType").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("_n2UGtFXv").build();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(isBusinessKey_id_n2UEK1dU, isPrimaryKey_id_n2UGc7fk, isCollection_id_n2UEXrwB, isPrimitive_id_n2UGPrSw, isList_id_n2UF9kIx, isSet_id_n2UF9BsS, getType_id_n2UGtFXv);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static boolean isBusinessKey_id_n2UEK1dU(@NotNull SNode __thisNode__) {
    return SPropertyOperations.getBoolean(__thisNode__, PROPS.businessKey$3x3O);
  }
  /*package*/ static boolean isPrimaryKey_id_n2UGc7fk(@NotNull SNode __thisNode__) {
    return SPropertyOperations.getBoolean(__thisNode__, PROPS.primaryKey$_nM1);
  }
  /*package*/ static boolean isCollection_id_n2UEXrwB(@NotNull SNode __thisNode__) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(__thisNode__, LINKS.type$3xxQ), CONCEPTS.CollectionType$L5);
  }
  /*package*/ static boolean isPrimitive_id_n2UGPrSw(@NotNull SNode __thisNode__) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(__thisNode__, LINKS.type$3xxQ), CONCEPTS.PrimitiveType$5g);
  }
  /*package*/ static boolean isList_id_n2UF9kIx(@NotNull SNode __thisNode__) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(__thisNode__, LINKS.type$3xxQ), CONCEPTS.List$KA);
  }
  /*package*/ static boolean isSet_id_n2UF9BsS(@NotNull SNode __thisNode__) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(__thisNode__, LINKS.type$3xxQ), CONCEPTS.Set$Zc);
  }
  /*package*/ static SNode getType_id_n2UGtFXv(@NotNull SNode __thisNode__) {
    return SLinkOperations.getTarget(__thisNode__, LINKS.type$3xxQ);
  }

  /*package*/ Attribute__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((Boolean) isBusinessKey_id_n2UEK1dU(node));
      case 1:
        return (T) ((Boolean) isPrimaryKey_id_n2UGc7fk(node));
      case 2:
        return (T) ((Boolean) isCollection_id_n2UEXrwB(node));
      case 3:
        return (T) ((Boolean) isPrimitive_id_n2UGPrSw(node));
      case 4:
        return (T) ((Boolean) isList_id_n2UF9kIx(node));
      case 5:
        return (T) ((Boolean) isSet_id_n2UF9BsS(node));
      case 6:
        return (T) ((SNode) getType_id_n2UGtFXv(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class PROPS {
    /*package*/ static final SProperty businessKey$3x3O = MetaAdapterFactory.getProperty(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4b8L, 0x255c2eaa12d4b9L, "businessKey");
    /*package*/ static final SProperty primaryKey$_nM1 = MetaAdapterFactory.getProperty(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4b8L, 0x255c2eac2cc5fcL, "primaryKey");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink type$3xxQ = MetaAdapterFactory.getContainmentLink(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4b8L, 0x255c2eaa12d4bbL, "type");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept CollectionType$L5 = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa2afa84L, "CodeGenerationLanguaage.structure.CollectionType");
    /*package*/ static final SConcept PrimitiveType$5g = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4b0L, "CodeGenerationLanguaage.structure.PrimitiveType");
    /*package*/ static final SConcept List$KA = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa2afa83L, "CodeGenerationLanguaage.structure.List");
    /*package*/ static final SConcept Set$Zc = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa5f9e38L, "CodeGenerationLanguaage.structure.Set");
  }
}
