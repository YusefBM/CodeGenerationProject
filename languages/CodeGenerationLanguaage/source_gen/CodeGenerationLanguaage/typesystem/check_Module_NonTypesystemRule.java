package CodeGenerationLanguaage.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import CodeGenerationLanguaage.behavior.DomainObject__BehaviorDescriptor;
import CodeGenerationLanguaage.behavior.Attribute__BehaviorDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SConcept;

public class check_Module_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_Module_NonTypesystemRule() {
  }
  public void applyRule(final SNode module, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    Set<String> domainObjectsNameSet = SetSequence.fromSet(new HashSet<String>());
    for (SNode elem : ListSequence.fromList(SLinkOperations.getChildren(module, LINKS.components$EJAO))) {
      if (SetSequence.fromSet(domainObjectsNameSet).contains(SPropertyOperations.getString(elem, PROPS.name$MnvL))) {
        {
          final MessageTarget errorTarget = new NodeMessageTarget();
          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(elem, "Domain object " + SPropertyOperations.getString(elem, PROPS.name$MnvL) + " is duplicated", "r:bf6effea-d744-4346-a7ab-dbe83af3352a(CodeGenerationLanguaage.typesystem)", "10515929662171203", null, errorTarget);
        }
      } else {
        SetSequence.fromSet(domainObjectsNameSet).addElement(SPropertyOperations.getString(elem, PROPS.name$MnvL));
      }
    }

    for (final SNode elem : ListSequence.fromList(SLinkOperations.getChildren(module, LINKS.components$EJAO))) {
      if (SNodeOperations.isInstanceOf(elem, CONCEPTS.DAO$m8)) {
        SNode domainObject = ListSequence.fromList(SLinkOperations.getChildren(module, LINKS.components$EJAO)).findFirst(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SNodeOperations.isInstanceOf(it, CONCEPTS.DomainObject$Rd) && SPropertyOperations.getString(it, PROPS.name$MnvL).equals(DomainObject__BehaviorDescriptor.getName_id_n2UG2Yyz.invoke(SLinkOperations.getTarget(SNodeOperations.as(elem, CONCEPTS.DAO$m8), LINKS.domainObject$sOJi)));
          }
        });
        boolean noPK = (ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.as(domainObject, CONCEPTS.DomainObject$Rd), LINKS.components$3sCt)).findFirst(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SNodeOperations.isInstanceOf(it, CONCEPTS.Attribute$eC) && (boolean) Attribute__BehaviorDescriptor.isPrimaryKey_id_n2UGc7fk.invoke(SNodeOperations.as(it, CONCEPTS.Attribute$eC));
          }
        }) == null);
        if (noPK) {
          {
            final MessageTarget errorTarget = new NodeMessageTarget();
            IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(domainObject, "Domain object associated with " + SPropertyOperations.getString(elem, PROPS.name$MnvL) + " must have a Primary Key", "r:bf6effea-d744-4346-a7ab-dbe83af3352a(CodeGenerationLanguaage.typesystem)", "10515929665416412", null, errorTarget);
          }
        }
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.Module$FI;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink components$EJAO = MetaAdapterFactory.getContainmentLink(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eab8a8900L, 0x255c2eab8a8901L, "components");
    /*package*/ static final SReferenceLink domainObject$sOJi = MetaAdapterFactory.getReferenceLink(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eac0f4b33L, 0x255c2eac906680L, "domainObject");
    /*package*/ static final SContainmentLink components$3sCt = MetaAdapterFactory.getContainmentLink(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4a8L, 0x255c2eaa12d4bdL, "components");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept DAO$m8 = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eac0f4b33L, "CodeGenerationLanguaage.structure.DAO");
    /*package*/ static final SConcept DomainObject$Rd = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4a8L, "CodeGenerationLanguaage.structure.DomainObject");
    /*package*/ static final SConcept Attribute$eC = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eaa12d4b8L, "CodeGenerationLanguaage.structure.Attribute");
    /*package*/ static final SConcept Module$FI = MetaAdapterFactory.getConcept(0x46855889559641f7L, 0x9277402e4fbfedc8L, 0x255c2eab8a8900L, "CodeGenerationLanguaage.structure.Module");
  }
}
